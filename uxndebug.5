.Dd June 5, 2022
.Dt UXNDEBUG 5
.Os
.Sh NAME
.Nm uxndebug ,
.Nm .tal.debug
.Nd uxntal debug info file format
.Sh DESCRIPTION
The format of debug information for an uxntal rom file is documented in this file.
.Pp
Each line of the debug file is terminated by a single
.Aq newline
character, and contains a single decimal number.
The line number of the file corresponds to the
.Em byte
of the rom,
and the number written on the line signifies which
.Em token
in the source files was assembled into that
.Em byte .
The name of the debug file is used to identify which source file contains the relevant
.Em token Ns s .
.Sh FILES
For a source file
.Pa example.tal ,
the corresponding rom
.Pa example.rom
and debug information file
.Pa example.tal.debug
are created by running:
.Bd -literal -offset indent
uxndebug example.tal example.rom
.Ed
.Sh EXAMPLES
Consider a source file
.Pa test.tal :
.Bd -literal -offset indent -compact
|0100
 #ff POP
BRK
.Ed
.Pp
Running the command
.Bd -literal -offset indent -compact
uxndebug example.tal example.rom
.Ed
produces files
.Pa test.tal.debug
and
.Pa test.rom ;
the debug file contains:
.Bd -literal -offset indent -compact
2
2
3
4
.Ed
and the hexdump of the rom is
.Bd -literal -offset indent -compact
80 ff 02 00
.Ed
.Pp
This means that the first byte in the rom (the first line in
.Pa test.tal.debug )
was produced by the second token in the source file, and the third byte
in the rom (the third line in the debug file) was produced by the third token in the source file,
and so on.
.Sh SEE ALSO
.Xr uxndebug 1
