#!/bin/sh

# desired behaviour
# shellcheck disable=SC2015
[ "$#" -eq 2 ] && [ -r "$1" ] || {
    printf "usage: %s file.tal.debug address\n" "$0" >&2
    exit 1
}

case "$1" in
    *.tal.debug) ;;
    *)
        printf "%s: does not end in .tal.debug, can't work out source file\n" "$1" >&2
        exit 1
    ;;
esac

debug_file="$1"
source_file="${1%.debug}"

address="$(printf "%s" "$2" | tr 'a-f' 'A-F')"
dec_address="$(printf "16iAo%sp\n" "$address" | dc || kill 0)"
# add 1 because the zeroth byte is on the first line
dec_address="$((dec_address + 1))"
# TODO: should we subtract the #0100 offset or request the user to do that?

is_integer() {
    printf %d "$1" >/dev/null 2>&1
}

token="$(sed -n "${dec_address}p" "$debug_file")"
: "${token:?can\'t find integer from debug file at given byte}"
is_integer "$token" || {
    printf "can't find an integer token number in %s for byte %X\n" "$debug_file" "$address" >&2
    exit 1
}

i=0
lineno=0
while read -r line; do
    lineno="$((lineno + 1))"
    # word splitting is desired.
    # shellcheck disable=SC2086
    set -- $line
    i="$((i + $#))"
    [ "$i" -ge "$token" ] && {
        printf "line %d: %s\n" "$lineno" "$line"
        break
    }
done < "$source_file"
